@page "/getdevice"

@inject ProgramInstance cois


<div class="modal" style="opacity:1;display:initial;" id="myModal">
    <div class="modal-dialog">
        <div class="modal-content">

            <div class="modal-body" style="height:400px;overflow:auto;">
                <div>



                    <h3>Pobierz sprzęt</h3>

                    <div class="" style="width:100%;">

                        <div>
                            @if (selectedEmployeeParameter == null)
                            {
                                <select class="form-control" value="@empid" @onchange="ChangeEm">
                                    @foreach (var t in employees)
                                    {
                                        <option value="@t.Id">@t.FullName()</option>
                                    }
                                </select>
                            }
                            else
                            {
                                <h3>@selectedEmployeeParameter?.FullName()</h3>
                            }
                        </div>

                        @code {
                            /// <summary>
                            /// Podać jeśli wydanie konkretnej osobie
                            /// </summary>
                            [Parameter]
                            public EmployeeType selectedEmployeeParameter { get; set; }

                            int empid { get; set; }

                            EmployeeType selectedEmployee { get; set; }

                            void ChangeEm(ChangeEventArgs e)
                            {
                                empid = int.Parse(e.Value.ToString());
                                selectedEmployee = EmployeeType.GetEmployee(int.Parse(e.Value.ToString()));
                            }
                        }

                        <div>
                            <select class="form-control" value="@selectedDevice?.Id" @onchange="ChangeTyp">
                                @if (deviceclass == DeviceEvidence.deviceclass.Skaner)
                                {
                                    @if (scanners.Count > 0)
                                    {
                                        @foreach (var t in scanners)
                                        {
                                            <option value="@t.Id">@t.Name</option>
                                        }
                                    }
                                    else
                                    {
                                        <option>Brak sprzętu do pobrania</option>
                                    }
                                }

                                @if (deviceclass == DeviceEvidence.deviceclass.Bateria)
                                {
                                    @if (batteries.Count > 0)
                                    {
                                        @foreach (var t in batteries)
                                        {
                                            <option value="@t.Id">@t.Name</option>
                                        }
                                    }
                                    else
                                    {
                                        <option>Brak sprzętu do pobrania</option>
                                    }
                                }
                                @if (deviceclass == DeviceEvidence.deviceclass.Elektrowózek)
                                {
                                    @if (forklifts.Count > 0)
                                    {
                                        @foreach (var t in forklifts)
                                        {
                                            <option value="@t.Id">@t.Name</option>
                                        }
                                    }
                                    else
                                    {
                                        <option>Brak sprzętu do pobrania</option>
                                    }
                                }
                                @if (deviceclass == DeviceEvidence.deviceclass.Rekwizyt)
                                {
                                    @if (requisites.Count > 0)
                                    {
                                        @foreach (var t in requisites)
                                        {
                                            <option value="@t.Id">@t.Name</option>
                                        }
                                    }
                                    else
                                    {
                                        <option>Brak sprzętu do pobrania</option>
                                    }
                                }
                            </select>

                        </div>
                        @code {

                            IDevice selectedDevice { get; set; }

                            void ChangeTyp(ChangeEventArgs e)
                            {
                                if (deviceclass == DeviceEvidence.deviceclass.Skaner)
                                    selectedDevice = ScannerType.GetScanner(int.Parse(e.Value.ToString()));

                                if (deviceclass == DeviceEvidence.deviceclass.Bateria)
                                    selectedDevice = BatteryType.GetBattery(int.Parse(e.Value.ToString()));

                                if (deviceclass == DeviceEvidence.deviceclass.Elektrowózek)
                                    selectedDevice = ForkliftType.GetForkLift(int.Parse(e.Value.ToString()));

                                if (deviceclass == DeviceEvidence.deviceclass.Rekwizyt)
                                    selectedDevice = RequisiteType.GetRequisite(int.Parse(e.Value.ToString()));
                            }
                        }
                    </div>

                    <div style="position:absolute;bottom:0px;width:90%;" class="modal-footer">
                        <input type="button" class="btn btn-warning" value="Anuluj" @onclick="OnCancel" />

                        @if (selectedEmployee != null)
                        {
                            @if (selectedDevice != null)
                            {
                                <input type="button" class="btn btn-success" value="Pobierz" @onclick="GetDevices" />
                            }
                        }
                    </div>

                    @if (selectedDevice != null)
                    {
                        <div class="frame">
                        <h5>Kondycja</h5>
                        <div>
                            <label>@selectedDevice.Condition.Name</label>
                        </div>
                        </div>

                        <div class="frame">
                        <h5>Uwagi</h5>
                        <label   style="width:100%;">@selectedDevice.PassDescription</label>
                        </div>
                    }



                </div>
            </div>
        </div>
    </div>
</div>





@code {
    [Parameter]
    public EventCallback OnSaved { get; set; }

    [Parameter]
    public EventCallback OnCancel { get; set; }

    void GetDevices()
    {
        DeviceEvidence.GetDevice(selectedDevice, DateTime.Now, selectedEmployee, cois.User.Employee, cois.Zone);
        OnSaved.InvokeAsync();
    }

    void Cancel()
    {
        OnCancel.InvokeAsync();
    }

    /// <summary>
    /// Wymagane, typ urzadzenia
    /// </summary>
    [Parameter]
    public DeviceEvidence.deviceclass deviceclass { get; set; }

    /// <summary>
    /// Wymagane, jeśli wylistować praocniwków z konkretnej strefy, lub podać parametr employees
    /// </summary>
    [Parameter]
    public int ZoneEmployeesId { get; set; }

    protected override void OnInitialized()
    {
        employees = new List<EmployeeType>();

        if (selectedEmployeeParameter != null)
        {
            selectedEmployee = selectedEmployeeParameter;
        }
        else
        {
            if (employees.Count == 0)
                GetEmployees();
        }

        GetDevicesToGet();

        if (deviceclass == DeviceEvidence.deviceclass.Skaner)
        {
            selectedDevice = scanners.FirstOrDefault();
        }
        if (deviceclass == DeviceEvidence.deviceclass.Bateria)
        {
            selectedDevice = batteries.FirstOrDefault();
        }
        if (deviceclass == DeviceEvidence.deviceclass.Elektrowózek)
        {
            selectedDevice = forklifts.FirstOrDefault();
        }
        if (deviceclass == DeviceEvidence.deviceclass.Rekwizyt)
        {
            selectedDevice = requisites.FirstOrDefault();
        }
    }

    /// <summary>
    /// podać jeśli do wyboru są tylko konkretni pracownicy
    /// </summary>
    [Parameter]
    public List<EmployeeType> employees { get; set; }

    public List<ScannerType> scanners { get; set; }
    public List<BatteryType> batteries { get; set; }
    public List<ForkliftType> forklifts { get; set; }
    public List<RequisiteType> requisites { get; set; }

    public void GetDevicesToGet()
    {
        if (deviceclass == DeviceEvidence.deviceclass.Skaner)
        {
            scanners = DeviceOperation.GetScannersToGet(cois.Zone.OrganizationUnit().Id);
        }
        if (deviceclass == DeviceEvidence.deviceclass.Bateria)
        {
            batteries = DeviceOperation.GetBateriesToGet(cois.Zone.OrganizationUnit().Id);
        }
        if (deviceclass == DeviceEvidence.deviceclass.Elektrowózek)
        {
            forklifts = DeviceOperation.GetForkliftsToGet(cois.Zone.OrganizationUnit().Id);
        }
        if (deviceclass == DeviceEvidence.deviceclass.Rekwizyt)
        {
            requisites = DeviceOperation.GetRequisitesToGet(cois.Zone.OrganizationUnit().Id);
        }
    }

    public void GetEmployees()
    {
        employees = EmployeeType.GetEmployees(ZoneEmployeesId);
    }
}
